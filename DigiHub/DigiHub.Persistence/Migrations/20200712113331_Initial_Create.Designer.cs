// <auto-generated />
using System;
using DigiHub.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DigiHub.Persistence.Migrations
{
    [DbContext(typeof(DigiHubDBContext))]
    [Migration("20200712113331_Initial_Create")]
    partial class Initial_Create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DigiHub.Domain.Entities.AddressEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area");

                    b.Property<string>("City");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.AssignProvidersToOrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AssignedDateTime");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<int>("OrderId");

                    b.Property<int>("ProviderId");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProviderId");

                    b.ToTable("AssignProviderToOrder");
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Banner");

                    b.Property<string>("CategoryName");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Icon");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<int>("ParentId");

                    b.Property<string>("Thumbnail");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.CategoryWiseServiceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<int>("ServiceId");

                    b.Property<double>("ServicePrice");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ServiceId");

                    b.ToTable("CategoryWiseService");
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.ClientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<string>("ClientName");

                    b.Property<string>("ContactNumber");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("DetailAddress");

                    b.Property<string>("Email");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.CommissionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommissionType");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<int>("ServiceId");

                    b.Property<DateTime?>("ValidUntil");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("Commission");
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.OfferEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<string>("OfferCode");

                    b.Property<string>("OfferDescription");

                    b.Property<double>("OfferDiscount");

                    b.Property<string>("OfferName");

                    b.Property<string>("OfferType");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("Offer");
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.OrderDetailsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<int>("OrderId");

                    b.Property<int>("ServiceId");

                    b.Property<double>("ServicePrice");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ServiceId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.OrdersEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<double>("Discount");

                    b.Property<double>("GrossAmount");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<double>("NetAmount");

                    b.Property<string>("OrderNumber");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.ProvidersEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<string>("BusinessAddress");

                    b.Property<string>("ContactNumber");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<bool>("IsIndividual");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<string>("ProviderCode");

                    b.Property<string>("ProviderName");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Provider");
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.ServiceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<string>("ServiceDescription");

                    b.Property<string>("ServiceImage");

                    b.Property<string>("ServiceName");

                    b.HasKey("Id");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.TransactionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<double>("Discount");

                    b.Property<double>("GrossAmount");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LastModifiedBy");

                    b.Property<double>("NetAmount");

                    b.Property<int>("OrderId");

                    b.Property<int?>("OrdersEntityId");

                    b.Property<double>("PayableAmount");

                    b.Property<int>("ProviderId");

                    b.HasKey("Id");

                    b.HasIndex("OrdersEntityId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.ValuesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ValueName");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.AssignProvidersToOrderEntity", b =>
                {
                    b.HasOne("DigiHub.Domain.Entities.OrdersEntity", "OrdersEntity")
                        .WithMany("AssignProvidersToOrderEntities")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DigiHub.Domain.Entities.ProvidersEntity", "ProvidersEntity")
                        .WithMany("AssignProvidersToOrderEntities")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.CategoryWiseServiceEntity", b =>
                {
                    b.HasOne("DigiHub.Domain.Entities.CategoryEntity", "CategoryEntity")
                        .WithMany("CategoryWiseServiceEntities")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DigiHub.Domain.Entities.ServiceEntity", "ServiceEntity")
                        .WithMany("CategoryWiseServiceEntities")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.ClientEntity", b =>
                {
                    b.HasOne("DigiHub.Domain.Entities.AddressEntity", "AsAddressEntity")
                        .WithMany("ClientEntities")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.CommissionEntity", b =>
                {
                    b.HasOne("DigiHub.Domain.Entities.CategoryWiseServiceEntity", "CategoryWiseServiceEntity")
                        .WithMany("CommissionEntities")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.OrderDetailsEntity", b =>
                {
                    b.HasOne("DigiHub.Domain.Entities.OrdersEntity", "OrdersEntity")
                        .WithMany("OrderDetailsEntities")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DigiHub.Domain.Entities.CategoryWiseServiceEntity", "CategoryWiseServiceEntity")
                        .WithMany("OrderDetailsEntities")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.OrdersEntity", b =>
                {
                    b.HasOne("DigiHub.Domain.Entities.ClientEntity", "ClientEntity")
                        .WithMany("OrdersEntities")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.ProvidersEntity", b =>
                {
                    b.HasOne("DigiHub.Domain.Entities.AddressEntity", "AddressEntity")
                        .WithMany("ProvidersEntities")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DigiHub.Domain.Entities.TransactionEntity", b =>
                {
                    b.HasOne("DigiHub.Domain.Entities.OrdersEntity", "OrdersEntity")
                        .WithMany("TransactionEntities")
                        .HasForeignKey("OrdersEntityId");

                    b.HasOne("DigiHub.Domain.Entities.ProvidersEntity", "ProvidersEntity")
                        .WithMany("TransactionEntities")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
